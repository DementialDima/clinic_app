
import requests
from datetime import datetime, timedelta

# üîê –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—è
username = "Dima"
password = "dima0911"

base_url = "http://127.0.0.1:8000"
auth_url = f"{base_url}/auth/jwt/create/"
users_url = f"{base_url}/api/users/"
appointments_url = f"{base_url}/api/appointments/"
treatments_url = f"{base_url}/api/treatments/"

auth_data = {"username": username, "password": password}
auth_response = requests.post(auth_url, json=auth_data)

if auth_response.status_code != 200:
    print("‚ùå –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—è –Ω–µ –≤–¥–∞–ª–∞—Å—è")
    exit()

access_token = auth_response.json()["access"]
headers = {
    "Authorization": f"Bearer {access_token}",
    "Content-Type": "application/json"
}

# üîç –û—Ç—Ä–∏–º—É—î–º–æ –≤—Å—ñ—Ö –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤
response = requests.get(users_url, headers=headers)
users = response.json()

# üîé –ó–Ω–∞—Ö–æ–¥–∏–º–æ ID –ø–æ username
def get_id(username):
    for user in users:
        if user["username"] == username:
            return user["id"]
    return None

doctor_usernames = ["doctor1", "doctor2"]
patient_usernames = ["patient1", "patient2"]

doctor_ids = [get_id(u) for u in doctor_usernames]
patient_ids = [get_id(u) for u in patient_usernames]

# –î–∞–Ω—ñ –¥–ª—è –ø—Ä–∏–π–æ–º—ñ–≤
appointment_descriptions = [
    "–ü–µ—Ä–≤–∏–Ω–Ω–∞ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü—ñ—è",
    "–ü–ª–∞–Ω–æ–≤–µ –æ–±—Å—Ç–µ–∂–µ–Ω–Ω—è",
    "–õ—ñ–∫—É–≤–∞–Ω–Ω—è –∫–∞—Ä—ñ—î—Å—É",
    "–ö–æ–Ω—Ç—Ä–æ–ª—å –ø—ñ—Å–ª—è –ª—ñ–∫—É–≤–∞–Ω–Ω—è"
]

# –î–∞–Ω—ñ –¥–ª—è –ª—ñ–∫—É–≤–∞–Ω—å
treatments = [
    {"diagnosis": "–ö–∞—Ä—ñ—î—Å", "procedure": "–ü–ª–æ–º–±—É–≤–∞–Ω–Ω—è", "recommendations": "–ù–µ —ó—Å—Ç–∏ —Ç–≤–µ—Ä–¥–µ"},
    {"diagnosis": "–ì—ñ–Ω–≥—ñ–≤—ñ—Ç", "procedure": "–ü–æ–ª–æ—Å–∫–∞–Ω–Ω—è —Ç–∞ —á–∏—Å—Ç–∫–∞", "recommendations": "–ü–æ–ª–æ—Å–∫–∞—Ç–∏ —Ä–æ—Ç —Ä–æ–º–∞—à–∫–æ—é"},
    {"diagnosis": "–ü—É–ª—å–ø—ñ—Ç", "procedure": "–õ—ñ–∫—É–≤–∞–Ω–Ω—è –∫–∞–Ω–∞–ª—ñ–≤", "recommendations": "–ü—Ä–∏–π–º–∞—Ç–∏ –∑–Ω–µ–±–æ–ª—é–≤–∞–ª—å–Ω–µ"},
    {"diagnosis": "–ü—Ä–æ—Ñ—ñ–ª–∞–∫—Ç–∏–∫–∞", "procedure": "–ß–∏—Å—Ç–∫–∞ –∑—É–±—ñ–≤", "recommendations": ""}
]

# –°—Ç–≤–æ—Ä–µ–Ω–Ω—è –ø—Ä–∏–π–æ–º—ñ–≤
for patient_id in patient_ids:
    for i in range(4):
        doctor_id = doctor_ids[i % len(doctor_ids)]
        scheduled_time = (datetime.now() + timedelta(days=i)).isoformat()

        if doctor_id is None or patient_id is None:
            print(f"‚ùå –ü—Ä–æ–ø—É—â–µ–Ω–æ: –ª—ñ–∫–∞—Ä –∞–±–æ –ø–∞—Ü—ñ—î–Ω—Ç –Ω–µ –∑–Ω–∞–π–¥–µ–Ω—ñ")
            continue

        appointment_data = {
            "patient": patient_id,
            "doctor": doctor_id,
            "scheduled_time": scheduled_time,
            "description": appointment_descriptions[i]
        }
        appt_response = requests.post(appointments_url, headers=headers, json=appointment_data)
        print(f"üìÖ –ü—Ä–∏–π–æ–º #{i+1} –¥–ª—è –ø–∞—Ü—ñ—î–Ω—Ç–∞ {patient_id}: {appt_response.status_code}")

        if appt_response.status_code == 201:
            appointment_id = appt_response.json()["id"]
            treatment_data = treatments[i]
            treatment_data["appointment"] = appointment_id

            treat_response = requests.post(treatments_url, headers=headers, json=treatment_data)
            print(f"  ü©∫ –õ—ñ–∫—É–≤–∞–Ω–Ω—è: {treat_response.status_code}")
        else:
            print(f"  ‚ùå –ù–µ –≤–¥–∞–ª–æ—Å—è —Å—Ç–≤–æ—Ä–∏—Ç–∏ –ø—Ä–∏–π–æ–º: {appt_response.text}")
            print("üîç Doctor IDs:", doctor_ids)
print("üîç Patient IDs:", patient_ids)
