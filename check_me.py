import requests
from datetime import datetime, timedelta
import random

BASE_URL = "http://localhost:8000"
ADMIN_CREDENTIALS = {"username": "Dima", "password": "dima0911"}

# üîê –õ–æ–≥—ñ–Ω
login_res = requests.post(f"{BASE_URL}/api/token/", json=ADMIN_CREDENTIALS)
access = login_res.json().get("access")
headers = {"Authorization": f"Bearer {access}"}
print("üîê –£—Å–ø—ñ—à–Ω–∏–π –ª–æ–≥—ñ–Ω")

# üë®‚Äç‚öïÔ∏è –õ—ñ–∫–∞—Ä—ñ
doctors_info = [
    {
        "username": "petrenko_i",
        "password": "test1234",
        "role": "DOCTOR",
        "doctor_profile": {
            "first_name": "–Ü–≤–∞–Ω",
            "last_name": "–ü–µ—Ç—Ä–µ–Ω–∫–æ",
            "middle_name": "–û–ª–µ–∫—Å—ñ–π–æ–≤–∏—á",
            "specialization": "–û—Ä—Ç–æ–¥–æ–Ω—Ç",
            "experience_years": 7,
            "license_number": "ORT-2020-001",
            "license_issued": "2020-05-15",
            "education": "–õ—å–≤—ñ–≤—Å—å–∫–∏–π –º–µ–¥—É–Ω—ñ–≤–µ—Ä—Å–∏—Ç–µ—Ç",
            "category": "–≤–∏—â–∞",
            "phone_number": "+380971112201",
            "email": "ivan.petrenko@clinic.com",
            "address": "–º. –õ—å–≤—ñ–≤, –≤—É–ª. –î–∞–Ω–∏–ª–∞ –ì–∞–ª–∏—Ü—å–∫–æ–≥–æ, 10"
        }
    },
    {
        "username": "kozlovska_o",
        "password": "test1234",
        "role": "DOCTOR",
        "doctor_profile": {
            "first_name": "–û–ª–µ–Ω–∞",
            "last_name": "–ö–æ–∑–ª–æ–≤—Å—å–∫–∞",
            "middle_name": "–ú–∏—Ö–∞–π–ª—ñ–≤–Ω–∞",
            "specialization": "–•—ñ—Ä—É—Ä–≥-—Å—Ç–æ–º–∞—Ç–æ–ª–æ–≥",
            "experience_years": 10,
            "license_number": "SURG-2015-089",
            "license_issued": "2015-04-22",
            "education": "–•–∞—Ä–∫—ñ–≤—Å—å–∫–∏–π –º–µ–¥–∏—á–Ω–∏–π —ñ–Ω—Å—Ç–∏—Ç—É—Ç",
            "category": "–ø–µ—Ä—à–∞",
            "phone_number": "+380971112202",
            "email": "olena.kozlovska@clinic.com",
            "address": "–º. –ö–∏—ó–≤, –≤—É–ª. –ê–∫–∞–¥–µ–º—ñ–∫–∞ –í—ñ–ª—å—è–º—Å–∞, 5"
        }
    },
    {
        "username": "tkachenko_d",
        "password": "test1234",
        "role": "DOCTOR",
        "doctor_profile": {
            "first_name": "–î–º–∏—Ç—Ä–æ",
            "last_name": "–¢–∫–∞—á–µ–Ω–∫–æ",
            "middle_name": "–Ü–≥–æ—Ä–æ–≤–∏—á",
            "specialization": "–¢–µ—Ä–∞–ø–µ–≤—Ç",
            "experience_years": 5,
            "license_number": "THER-2018-321",
            "license_issued": "2018-11-02",
            "education": "–ù–ú–£ —ñ–º. –ë–æ–≥–æ–º–æ–ª—å—Ü—è",
            "category": "–¥—Ä—É–≥–∞",
            "phone_number": "+380971112203",
            "email": "d.tkachenko@clinic.com",
            "address": "–º. –î–Ω—ñ–ø—Ä–æ, –ø—Ä–æ—Å–ø. –Ø–≤–æ—Ä–Ω–∏—Ü—å–∫–æ–≥–æ, 21"
        }
    }
]

doctors = []
for doc in doctors_info:
    res = requests.post(f"{BASE_URL}/api/users/create/", json=doc, headers=headers)
    print(f"üë®‚Äç‚öïÔ∏è –õ—ñ–∫–∞—Ä {doc['username']} —Å—Ç–≤–æ—Ä–µ–Ω–æ:", res.status_code)
    doctors.append(res.json()["id"])

# üßë‚Äçüíº –ü–∞—Ü—ñ—î–Ω—Ç–∏
patients_info = [
    {
        "username": "olga.kovalenko",
        "password": "test1234",
        "role": "PATIENT",
        "patient_profile": {
            "first_name": "–û–ª—å–≥–∞",
            "last_name": "–ö–æ–≤–∞–ª–µ–Ω–∫–æ",
            "middle_name": "–Æ—Ä—ñ—ó–≤–Ω–∞",
            "birth_date": "1992-07-12",
            "gender": "FEMALE",
            "phone_number": "+380991234561",
            "address": "–º. –ö–∏—ó–≤, –≤—É–ª. –•—Ä–µ—â–∞—Ç–∏–∫, 3",
            "inn": "1234567890",
            "medical_card_number": "MCN-101"
        }
    },
    {
        "username": "artem.ivanov",
        "password": "test1234",
        "role": "PATIENT",
        "patient_profile": {
            "first_name": "–ê—Ä—Ç–µ–º",
            "last_name": "–Ü–≤–∞–Ω–æ–≤",
            "middle_name": "–°–µ—Ä–≥—ñ–π–æ–≤–∏—á",
            "birth_date": "1988-11-05",
            "gender": "MALE",
            "phone_number": "+380991234562",
            "address": "–º. –û–¥–µ—Å–∞, –≤—É–ª. –ü—Ä–∏–º–æ—Ä—Å—å–∫–∞, 17",
            "inn": "1234567891",
            "medical_card_number": "MCN-102"
        }
    },
    {
        "username": "kateryna.litvinenko",
        "password": "test1234",
        "role": "PATIENT",
        "patient_profile": {
            "first_name": "–ö–∞—Ç–µ—Ä–∏–Ω–∞",
            "last_name": "–õ–∏—Ç–≤–∏–Ω–µ–Ω–∫–æ",
            "middle_name": "–ü–µ—Ç—Ä—ñ–≤–Ω–∞",
            "birth_date": "1995-03-20",
            "gender": "FEMALE",
            "phone_number": "+380991234563",
            "address": "–º. –•–∞—Ä–∫—ñ–≤, –≤—É–ª. –ü—É—à–∫—ñ–Ω—Å—å–∫–∞, 12",
            "inn": "1234567892",
            "medical_card_number": "MCN-103"
        }
    }
]

patients = []
for pat in patients_info:
    res = requests.post(f"{BASE_URL}/api/users/create/", json=pat, headers=headers)
    print(f"üßë‚Äçüíº –ü–∞—Ü—ñ—î–Ω—Ç {pat['username']} —Å—Ç–≤–æ—Ä–µ–Ω–æ:", res.status_code)
    patients.append(res.json()["id"])

# üìã –ü—Ä–∏–π–æ–º–∏
descriptions = [
    "–ö–æ–Ω—Ç—Ä–æ–ª—å –ø—ñ—Å–ª—è –æ—Ä—Ç–æ–¥–æ–Ω—Ç–∏—á–Ω–æ–≥–æ –ª—ñ–∫—É–≤–∞–Ω–Ω—è",
    "–ü–ª–∞–Ω–æ–≤–∞ —á–∏—Å—Ç–∫–∞ –∑—É–±—ñ–≤",
    "–í–∏–¥–∞–ª–µ–Ω–Ω—è –∑—É–±–∞ –º—É–¥—Ä–æ—Å—Ç—ñ",
    "–ü—ñ–¥–æ–∑—Ä–∞ –Ω–∞ –∫–∞—Ä—ñ—î—Å",
    "–ö–æ–Ω—Å—É–ª—å—Ç–∞—Ü—ñ—è —â–æ–¥–æ –±—Ä–µ–∫–µ—Ç—ñ–≤",
    "–ü–ª–æ–º–±—É–≤–∞–Ω–Ω—è –≤–µ—Ä—Ö–Ω—å–æ–≥–æ —Ä—ñ–∑—Ü—è",
    "–ó–∞–º—ñ–Ω–∞ —Å—Ç–∞—Ä–æ—ó –ø–ª–æ–º–±–∏",
    "–î—ñ–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –∑—É–±–Ω–æ–≥–æ –±–æ–ª—é",
    "–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü—ñ—ó –ø–µ—Ä–µ–¥ —ñ–º–ø–ª–∞–Ω—Ç–∞—Ü—ñ—î—é",
    "–§–æ—Ç–æ–ø–æ–ª—ñ–º–µ—Ä–Ω–∞ —Ä–µ—Å—Ç–∞–≤—Ä–∞—Ü—ñ—è"
]

print("üìÖ –°—Ç–≤–æ—Ä–µ–Ω–Ω—è –ø—Ä–∏–π–æ–º—ñ–≤...")
for i in range(10):
    is_past = i < 5
    day_offset = -10 + i if is_past else i + 1
    start = datetime.now() + timedelta(days=day_offset, hours=9 + i % 5)
    end = start + timedelta(minutes=30)
    appointment_data = {
        "doctor": random.choice(doctors),
        "patient": random.choice(patients),
        "scheduled_time": start.isoformat(),
        "end_time": end.isoformat(),
        "description": descriptions[i]
    }
    res = requests.post(f"{BASE_URL}/api/appointments/", json=appointment_data, headers=headers)
    print(f"üìã –ü—Ä–∏–π–æ–º #{i+1}: {res.status_code}")

print("‚úÖ –£—Å–ø—ñ—à–Ω–æ –∑–∞–ø–æ–≤–Ω–µ–Ω–æ –±–∞–∑—É")
