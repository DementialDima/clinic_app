import { useEffect, useState } from 'react';
import { useParams, useNavigate } from 'react-router-dom';
import axios from '../api/axios';
import AppHeader from '../components/Header';
import { getUserRole } from '../api/auth';

export default function AdminEditUserPage() {
    const { id } = useParams();
    const navigate = useNavigate();

    const [user, setUser] = useState(null);
    const [form, setForm] = useState({});
    const [profile, setProfile] = useState({});
    const [role, setRole] = useState('');
    const [loading, setLoading] = useState(true);
    const [message, setMessage] = useState('');

    useEffect(() => {
        if (getUserRole() !== 'ADMIN') {
            navigate('/');
        } else {
            fetchUser();
        }
    }, []);

    const fetchUser = async () => {
        try {
            const response = await axios.get(`/api/users/${id}/`);
            setUser(response.data);
            setForm({
                username: response.data.username,
                email: response.data.email,
            });
            setRole(response.data.role);
            if (response.data.patient_profile) {
                setProfile(response.data.patient_profile);
            } else if (response.data.doctor_profile) {
                setProfile(response.data.doctor_profile);
            }
        } catch (err) {
            console.error('–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—ñ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞', err);
        } finally {
            setLoading(false);
        }
    };

    const handleChange = (field) => (e) => {
        setForm({ ...form, [field]: e.target.value });
    };

    const handleProfileChange = (field) => (e) => {
        setProfile({ ...profile, [field]: e.target.value });
    };

    const handleSubmit = async (e) => {
        e.preventDefault();
        try {
            const payload = {
                ...form,
                role,
            };

            if (role === 'PATIENT') {
                payload.patient_profile = profile;
            } else if (role === 'DOCTOR') {
                payload.doctor_profile = profile;
            }

            await axios.patch(`/api/users/${id}/`, payload);
            setMessage('‚úÖ –î–∞–Ω—ñ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –æ–Ω–æ–≤–ª–µ–Ω–æ');
            setTimeout(() => navigate('/admin/users'), 1500);
        } catch (err) {
            console.error('‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –æ–Ω–æ–≤–ª–µ–Ω–Ω—ñ:', err.response?.data || err);
            setMessage('‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –æ–Ω–æ–≤–ª–µ–Ω–Ω—ñ');
        }
    };

    if (loading) return <div>–ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è...</div>;

    return (
        <>
            <AppHeader />
            <div style={{ padding: 20 }}>
                <h2>üìù –†–µ–¥–∞–≥—É–≤–∞–Ω–Ω—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ #{id}</h2>
                <form onSubmit={handleSubmit}>
                    <input
                        required
                        placeholder="–õ–æ–≥—ñ–Ω"
                        value={form.username || ''}
                        onChange={handleChange('username')}
                    />
                    <input
                        placeholder="Email"
                        type="email"
                        value={form.email || ''}
                        onChange={handleChange('email')}
                    />
                    <select value={role} onChange={(e) => setRole(e.target.value)}>
                        <option value="PATIENT">–ü–∞—Ü—ñ—î–Ω—Ç</option>
                        <option value="DOCTOR">–õ—ñ–∫–∞—Ä</option>
                        <option value="ADMIN">–ê–¥–º—ñ–Ω</option>
                    </select>

                    {role === 'PATIENT' && (
                        <>
                            <h4>–ü—Ä–æ—Ñ—ñ–ª—å –ø–∞—Ü—ñ—î–Ω—Ç–∞</h4>
                            <input placeholder="–Ü–º‚Äô—è" value={profile.first_name || ''} onChange={handleProfileChange('first_name')} />
                            <input placeholder="–ü—Ä—ñ–∑–≤–∏—â–µ" value={profile.last_name || ''} onChange={handleProfileChange('last_name')} />
                            <input placeholder="–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω—É" value={profile.phone_number || ''} onChange={handleProfileChange('phone_number')} />
                            <input placeholder="–ê–¥—Ä–µ—Å–∞" value={profile.address || ''} onChange={handleProfileChange('address')} />
                            <input placeholder="–ù–æ–º–µ—Ä –º–µ–¥–∏—á–Ω–æ—ó –∫–∞—Ä—Ç–∫–∏" value={profile.medical_card_number || ''} onChange={handleProfileChange('medical_card_number')} />
                        </>
                    )}

                    {role === 'DOCTOR' && (
                        <>
                            <h4>–ü—Ä–æ—Ñ—ñ–ª—å –ª—ñ–∫–∞—Ä—è</h4>
                            <input placeholder="–Ü–º‚Äô—è" value={profile.first_name || ''} onChange={handleProfileChange('first_name')} />
                            <input placeholder="–ü—Ä—ñ–∑–≤–∏—â–µ" value={profile.last_name || ''} onChange={handleProfileChange('last_name')} />
                            <input placeholder="–°–ø–µ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è" value={profile.specialization || ''} onChange={handleProfileChange('specialization')} />
                            <input placeholder="–¢–µ–ª–µ—Ñ–æ–Ω" value={profile.phone_number || ''} onChange={handleProfileChange('phone_number')} />
                            <input placeholder="–ê–¥—Ä–µ—Å–∞" value={profile.address || ''} onChange={handleProfileChange('address')} />
                        </>
                    )}

                    <br />
                    <button type="submit">–ó–±–µ—Ä–µ–≥—Ç–∏ –∑–º—ñ–Ω–∏</button>
                </form>

                {message && <p>{message}</p>}
            </div>
        </>
    );
}
